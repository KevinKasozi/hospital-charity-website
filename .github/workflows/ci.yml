name: CI Pipeline

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.13.1'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Lint Code
        run: npm run lint
        continue-on-error: true

      - name: Run Tests
        env:
          VITE_STRIPE_PUBLISHABLE_KEY: ${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}
          VITE_NEXT_PUBLIC_STRIPE_PRICE_ID: ${{ secrets.VITE_NEXT_PUBLIC_STRIPE_PRICE_ID }}
          VITE_REACT_APP_CONTENTFUL_SPACE_ID: ${{ secrets.VITE_REACT_APP_CONTENTFUL_SPACE_ID }}
          VITE_REACT_APP_CONTENTFUL_ACCESS_TOKEN: ${{ secrets.VITE_REACT_APP_CONTENTFUL_ACCESS_TOKEN }}
          VITE_REACT_APP_CONTENTFUL_DELIVERY_TOKEN: ${{ secrets.VITE_REACT_APP_CONTENTFUL_DELIVERY_TOKEN }}
          VITE_REACT_APP_CONTENTFUL_PREVIEW_TOKEN: ${{ secrets.VITE_REACT_APP_CONTENTFUL_PREVIEW_TOKEN }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: npm test
        continue-on-error: true

  sonar-analysis:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Start SonarQube in Docker
      - name: Start SonarQube
        run: |
          docker run -d --name sonarqube -p 9000:9000 sonarqube:community
          sleep 60 # Allow SonarQube to initialize

      # Step 3: Generate SonarQube Token
      - name: Generate SonarQube Token
        id: generate-token
        run: |
          curl -u admin:admin -X POST "http://localhost:9000/api/user_tokens/generate" \
            -d "name=GitHubRunnerToken" \
            | jq -r '.token' > sonar-token.txt
        env:
          PATH: /usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin

      # Step 4: Set Token Environment Variable
      - name: Set SONAR_TOKEN Environment Variable
        run: echo "SONAR_TOKEN=$(cat sonar-token.txt)" >> $GITHUB_ENV

      # Step 5: Run SonarQube Scanner
      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        run: |
          docker run --rm \
            -e SONAR_HOST_URL="http://localhost:9000" \
            -e SONAR_TOKEN="${{ env.SONAR_TOKEN }}" \
            -v $PWD:/usr/src \
            sonarsource/sonar-scanner-cli \
            sonar-scanner

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.13.1'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build the App
        env:
          VITE_STRIPE_PUBLISHABLE_KEY: ${{ secrets.VITE_STRIPE_PUBLISHABLE_KEY }}
          VITE_NEXT_PUBLIC_STRIPE_PRICE_ID: ${{ secrets.VITE_NEXT_PUBLIC_STRIPE_PRICE_ID }}
          VITE_REACT_APP_CONTENTFUL_SPACE_ID: ${{ secrets.VITE_REACT_APP_CONTENTFUL_SPACE_ID }}
          VITE_REACT_APP_CONTENTFUL_ACCESS_TOKEN: ${{ secrets.VITE_REACT_APP_CONTENTFUL_ACCESS_TOKEN }}
          VITE_REACT_APP_CONTENTFUL_DELIVERY_TOKEN: ${{ secrets.VITE_REACT_APP_CONTENTFUL_DELIVERY_TOKEN }}
          VITE_REACT_APP_CONTENTFUL_PREVIEW_TOKEN: ${{ secrets.VITE_REACT_APP_CONTENTFUL_PREVIEW_TOKEN }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        run: npm run build

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Link Netlify Site
        run: netlify link --id ${{ secrets.NETLIFY_SITE_ID }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --prod --dir=./dist --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.13.1'

      - name: Install Dependencies
        run: npm install

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run npm audit
        run: npm audit --audit-level=high
